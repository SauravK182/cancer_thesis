% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dge_analysis.R
\name{dge_analysis}
\alias{dge_analysis}
\title{Automate DGE from \code{DESeq2}}
\usage{
dge_analysis(
  featurecounts,
  coldata,
  contrast.var = colnames(coldata)[length(colnames(coldata))],
  contrasts = coldata[, colnames(coldata) == contrast.var] \%>\% levels(),
  formula.vec = colnames(coldata),
  alphaTest = 0.05,
  lfc = 0
)
}
\arguments{
\item{featurecounts}{Can either be a character string representing path to valid \code{featureCounts} matrix file,
or an isolated data frame of raw gene counts.}

\item{coldata}{A df-like design matrix object for \code{DESeq2} - this assumes the user has already factored and leveled the columns.}

\item{contrast.var}{Character string indicating which variable to perform DGE for.
Default: Assumes last variable in \code{coldata}.}

\item{contrasts}{Character string for levels to be pairwise tested. Levels listed first will be in the numerator.
Default: will perform pairwise DGE tests on all levels for the last column in the design matrix.}

\item{formula.vec}{Character vector indicating the columns or interactions to use for the design for \code{DESeq2}.
Default: Will use all columns available in the design matrix, with the last column being the main effect of interest.}

\item{alphaTest}{A FDR-adjusted p-value to determine significance for DE. Default is 0.05.}

\item{lfc}{A threshold to pass to \code{lfcShrink()} from \code{DESeq2} to determine the fold-change threshold for significance.
Default: 0.}
}
\value{
A list of 1) list of \code{DESeqResults} objects, 2) the original \code{DGE} object from \code{DESeq()}
}
\description{
Takes in raw count data and a design matrix and automates repeated calls to `DESeq2`` for user convenience.
}
\examples{
# For analyzing data from GSE149103
featurecounts.ren <- ("D:/SK/data/ren-panc/rna-seq/aligned/ren_rna_rawcounts.txt")
coldata.ren <- data.frame(Culture = rep(c("CAPAN1", "HPNE", "PANC1"), each = 3))
coldata.ren$Culture <- factor(coldata.ren$Culture, levels = c("CAPAN1", "PANC1", "HPNE"))

# Call DESeq2, isolate capan vs. panc comparison
ren.dge <- dge_analysis(featurecounts.ren, coldata.ren, contrasts = c("CAPAN1", "PANC1", "HPNE"))
capan.panc <- ren.dge[[1]][[1]]
}
